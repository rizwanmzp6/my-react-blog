{"ast":null,"code":"import _slicedToArray from \"/Users/cosmos/Desktop/my-react-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/cosmos/Desktop/my-react-blog/src/components/Nav/Nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './nav-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav(_ref) {\n  _s();\n\n  var initialPosts = _ref.initialPosts,\n      posts = _ref.posts,\n      setPosts = _ref.setPosts;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var history = useHistory();\n\n  function filterPosts(searchTerm) {\n    if (searchTerm.trim() === '') {\n      setPosts(initialPosts);\n    } else {\n      var filteredPosts = posts.filter(function (x) {\n        return x.title.toLowerCase().includes(searchTerm.toLowerCase()) || x.tags.toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setPosts(filteredPosts);\n    }\n  }\n\n  useEffect(function () {\n    filterPosts(search);\n  }, [search]);\n\n  function resetSearchbar() {\n    var searchBar = document.getElementById('searchInput');\n    searchBar.value = null;\n    setSearch('');\n  }\n\n  function readyToSearch() {\n    history.push('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://c.files.bbci.co.uk/12A9B/production/_111434467_gettyimages-1143489763.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"navbar\",\n            onClick: resetSearchbar,\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"navbar\",\n            onClick: resetSearchbar,\n            to: \"/newpost\",\n            children: \"New post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search\",\n            children: \"Search for post / Enter Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"searchInput\",\n            type: \"text\",\n            onChange: function onChange(e) {\n              return setSearch(e.target.value);\n            },\n            onClick: readyToSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"TlcKnkPPt65AZCaXGx3dn0VLKxI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/cosmos/Desktop/my-react-blog/src/components/Nav/Nav.js"],"names":["React","useState","useEffect","Link","useHistory","Nav","initialPosts","posts","setPosts","search","setSearch","history","filterPosts","searchTerm","trim","filteredPosts","filter","x","title","toLowerCase","includes","tags","resetSearchbar","searchBar","document","getElementById","value","readyToSearch","push","e","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,GAAT,OAAgD;AAAA;;AAAA,MAAjCC,YAAiC,QAAjCA,YAAiC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC7D,kBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,OAAO,GAAGP,UAAU,EAA1B;;AAEA,WAASQ,WAAT,CAAqBC,UAArB,EAAiC;AAC/B,QAAIA,UAAU,CAACC,IAAX,OAAsB,EAA1B,EAA8B;AAC5BN,MAAAA,QAAQ,CAACF,YAAD,CAAR;AACD,KAFD,MAEO;AACL,UAAMS,aAAa,GAAGR,KAAK,CAACS,MAAN,CACpB,UAACC,CAAD;AAAA,eACEA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BP,UAAU,CAACM,WAAX,EAA/B,KACAF,CAAC,CAACI,IAAF,CAAOF,WAAP,GAAqBC,QAArB,CAA8BP,UAAU,CAACM,WAAX,EAA9B,CAFF;AAAA,OADoB,CAAtB;AAKAX,MAAAA,QAAQ,CAACO,aAAD,CAAR;AACD;AACF;;AAEDb,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,WAAW,CAACH,MAAD,CAAX;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,WAASa,cAAT,GAA0B;AACxB,QAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAhB;AACAF,IAAAA,SAAS,CAACG,KAAV,GAAkB,IAAlB;AACAhB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD;;AAED,WAASiB,aAAT,GAAyB;AACvBhB,IAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD;;AAED,sBACE;AAAA,2BACE;AAAA,8BACE;AACE,QAAA,GAAG,EAAC,mFADN;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAEN,cAAlC;AAAkD,YAAA,EAAE,EAAC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAEA,cAAlC;AAAkD,YAAA,EAAE,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,aADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,qBAAOnB,SAAS,CAACmB,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAhB;AAAA,aAHZ;AAIE,YAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA9DuBtB,G;UAEND,U;;;KAFMC,G","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './nav-styles.css';\r\n\r\nexport default function Nav({ initialPosts, posts, setPosts }) {\r\n  const [search, setSearch] = useState('');\r\n  const history = useHistory();\r\n\r\n  function filterPosts(searchTerm) {\r\n    if (searchTerm.trim() === '') {\r\n      setPosts(initialPosts);\r\n    } else {\r\n      const filteredPosts = posts.filter(\r\n        (x) =>\r\n          x.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          x.tags.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      setPosts(filteredPosts);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    filterPosts(search);\r\n  }, [search]);\r\n\r\n  function resetSearchbar() {\r\n    let searchBar = document.getElementById('searchInput');\r\n    searchBar.value = null;\r\n    setSearch('');\r\n  }\r\n\r\n  function readyToSearch() {\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div>\r\n        <img\r\n          src='https://c.files.bbci.co.uk/12A9B/production/_111434467_gettyimages-1143489763.jpg'\r\n          alt=''\r\n        />\r\n        <ul>\r\n          <li>\r\n            <Link className='navbar' onClick={resetSearchbar} to='/'>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link className='navbar' onClick={resetSearchbar} to='/newpost'>\r\n              New post\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='search'>Search for post / Enter Category:</label>\r\n            <input\r\n              id='searchInput'\r\n              type='text'\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              onClick={readyToSearch}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}