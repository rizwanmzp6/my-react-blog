{"ast":null,"code":"import _slicedToArray from \"/Users/cosmos/Desktop/my-react-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/cosmos/Desktop/my-react-blog/src/pages/NewPost/NewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { initialPosts } from \"../../initialPosts\";\nimport moment from \"moment\";\nimport \"./newpost-styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPost() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      postText = _useState6[0],\n      setPostText = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tags = _useState8[0],\n      setTags = _useState8[1];\n\n  var history = useHistory();\n\n  function createNewPost() {\n    var newPost = {\n      id: newId(),\n      url: url,\n      title: title,\n      postText: postText,\n      tags: tags,\n      date: moment().format(\"L\")\n    };\n    initialPosts.push(newPost);\n    history.push(\"/\");\n  }\n\n  function newId() {\n    var id;\n\n    if (initialPosts.length === 0) {\n      id = 1;\n    } else {\n      id = initialPosts[initialPosts.length - 1].id + 1;\n    }\n\n    return id;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newPostWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Write a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"imgInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"picture\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"picture\",\n          name: \"picture\",\n          placeholder: \"Image URL...\",\n          onChange: function onChange(e) {\n            return setUrl(e.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"titleInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title of post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Post title...\",\n          onChange: function onChange(e) {\n            return setTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"textBodyInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postText\",\n          children: \"Blog post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postText\",\n          name: \"postText\",\n          placeholder: \"Write your post here...\",\n          onChange: function onChange(e) {\n            return setPostText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tagsInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tags\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"tags\",\n          name: \"tags\",\n          placeholder: \"Category...\",\n          onChange: function onChange(e) {\n            return setTags(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createNewPost,\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewPost, \"nSHhIp+3wCtfpiAYET4oG/yvUrc=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/cosmos/Desktop/my-react-blog/src/pages/NewPost/NewPost.js"],"names":["React","useState","useHistory","initialPosts","moment","NewPost","url","setUrl","title","setTitle","postText","setPostText","tags","setTags","history","createNewPost","newPost","id","newId","date","format","push","length","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,kBAAsBJ,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOK,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,WAASa,aAAT,GAAyB;AACvB,QAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEC,KAAK,EADK;AAEdZ,MAAAA,GAAG,EAAEA,GAFS;AAGdE,MAAAA,KAAK,EAAEA,KAHO;AAIdE,MAAAA,QAAQ,EAAEA,QAJI;AAKdE,MAAAA,IAAI,EAAEA,IALQ;AAMdO,MAAAA,IAAI,EAAEf,MAAM,GAAGgB,MAAT,CAAgB,GAAhB;AANQ,KAAhB;AAQAjB,IAAAA,YAAY,CAACkB,IAAb,CAAkBL,OAAlB;AACAF,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD;;AAED,WAASH,KAAT,GAAiB;AACf,QAAID,EAAJ;;AACA,QAAId,YAAY,CAACmB,MAAb,KAAwB,CAA5B,EAA+B;AAC7BL,MAAAA,EAAE,GAAG,CAAL;AACD,KAFD,MAEO;AACLA,MAAAA,EAAE,GAAGd,YAAY,CAACA,YAAY,CAACmB,MAAb,GAAsB,CAAvB,CAAZ,CAAsCL,EAAtC,GAA2C,CAAhD;AACD;;AACD,WAAOA,EAAP;AACD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,IAAI,EAAC,SAHP;AAIE,UAAA,WAAW,EAAC,cAJd;AAKE,UAAA,QAAQ,EAAE,kBAACM,CAAD;AAAA,mBAAOhB,MAAM,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAAA,WALZ;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,WAAW,EAAC,eAJd;AAKE,UAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,mBAAOd,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,yBAHd;AAIE,UAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,mBAAOZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA+BE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,aAJd;AAKE,UAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,mBAAOV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF,eAyCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEV,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GAhFuBV,O;UAKNH,U;;;KALMG,O","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { initialPosts } from \"../../initialPosts\";\r\nimport moment from \"moment\";\r\nimport \"./newpost-styles.css\";\r\n\r\nexport default function NewPost() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [postText, setPostText] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function createNewPost() {\r\n    const newPost = {\r\n      id: newId(),\r\n      url: url,\r\n      title: title,\r\n      postText: postText,\r\n      tags: tags,\r\n      date: moment().format(\"L\")\r\n    };\r\n    initialPosts.push(newPost);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function newId() {\r\n    let id;\r\n    if (initialPosts.length === 0) {\r\n      id = 1;\r\n    } else {\r\n      id = initialPosts[initialPosts.length - 1].id + 1;\r\n    }\r\n    return id;\r\n  }\r\n\r\n  return (\r\n    <div id=\"newPostWrapper\">\r\n      <h2>Write a new post</h2>\r\n      <form>\r\n        <div id=\"imgInput\">\r\n          <label htmlFor=\"picture\">Image</label>\r\n          <input\r\n            type=\"url\"\r\n            id=\"picture\"\r\n            name=\"picture\"\r\n            placeholder=\"Image URL...\"\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div id=\"titleInput\">\r\n          <label htmlFor=\"title\">Title of post</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"Post title...\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div id=\"textBodyInput\">\r\n          <label htmlFor=\"postText\">Blog post</label>\r\n          <textarea\r\n            id=\"postText\"\r\n            name=\"postText\"\r\n            placeholder=\"Write your post here...\"\r\n            onChange={(e) => setPostText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div id=\"tagsInput\">\r\n          <label htmlFor=\"tags\">Category</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"tags\"\r\n            name=\"tags\"\r\n            placeholder=\"Category...\"\r\n            onChange={(e) => setTags(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={createNewPost}>\r\n          Publish\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}